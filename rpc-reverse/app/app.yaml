apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  name: solana-rpc-reverse
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: solana-rpc-reverse
  template:
    metadata:
      labels:
        app: solana-rpc-reverse
    spec:
      containers:
      - name: nginx
        image: nginx:1.21.6-alpine
        env:
        - name: HOSTNAME
          value: rpc.mainnet.holaplex.tools
        - name: PORT
          value: "80"
        envFrom:
        - secretRef:
            name: validator-rpc-endpoint
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/templates
          readOnly: true
          name: nginx-conf
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: default.conf.template
                path: default.conf.template
---
apiVersion: v1
kind: Service
metadata:
  name: solana-rpc-reverse
spec:
  selector:
    app: solana-rpc-reverse
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  default.conf.template: |
   server {
     listen ${PORT};
     server_name ${HOSTNAME};

     location / {
      proxy_pass ${PROXY_HOST};
      proxy_set_header Host $proxy_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     }
   }
