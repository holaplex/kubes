apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: docker-registry-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  namespace: registry
spec:
  ingressClassName: nginx
  rules:
  - host: registry.YOUR_DOMAIN
    http:
      paths:
      - backend:
          service:
            name: docker-registry-service
            port:
              number: 5000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - registry.YOUR_DOMAIN
    secretName: registry-tls
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-service
  namespace: registry
  labels:
    run: docker-registry
spec:
  selector:
    app: docker-registry
  ports:
    - protocol: TCP
      port: 5000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry-data
  namespace: registry
  labels:
    app: docker-registry
spec:
 storageClassName: local-path
 accessModes:
   - ReadWriteOnce
 resources:
   requests:
      storage: VOLUME_SIZEGi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: registry
  labels:
    app: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - name: docker-registry
        image: registry
        ports:
        - containerPort: 5000
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /var/lib/registry
        env:
        - name: REGISTRY_HTTP_ADDR
          value: :5000
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: /var/lib/registry
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: docker-registry-data
